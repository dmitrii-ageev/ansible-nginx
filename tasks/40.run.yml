---
- name: Create the system environment file
  template:
    src: "{{ ansible_os_family }}.environment.file.j2"
    dest: "{{ nginx__system_environment_file }}"
    mode: "{{ nginx__file_mode }}"
  notify: Reload nginx service

# Install systemd unit file if it's supported by OS
- block:
    # For nginx it has the name 'nginxd'
    - name: Check if the init script exists
      stat:
        path: "/etc/init.d/nginxd"
      register: nginx__initd_script

    - name: Stop the nginx service
      systemd:
        name: "nginxd"
        state: stopped
      when: nginx__initd_script.stat.exists

    - name: Delete the init script
      file:
        path: "/etc/init.d/nginxd"
        state: absent
      when: nginx__initd_script.stat.exists

    - name: Create the service system unit file
      template:
        src: "{{ ansible_os_family }}.unit.file.j2"
        dest: "{{ nginx__system_service_file }}"
        mode: "{{ nginx__file_mode }}"
      notify: Restart nginx service

    - name: Enable service
      systemd:
        name: "{{ nginx__service_name }}"
        enabled: "yes"
        daemon-reload: "yes"
      notify: Systemd daemon reload

    - name: Start service
      systemd:
        name: "{{ nginx__service_name }}"
        state: started
      register: nginx__service_started
  when: service_manager == 'systemd'

# Install service init script if systemd is not available
# For distributions prior to Ubuntu 16 and RedHat 7
- block:
    - name: Create the service startup file
      template:
        src: "{{ ansible_os_family }}.init.file.j2"
        dest: "{{ nginx__system_init_file }}"
        mode: "{{ nginx__exec_mode }}"
      notify: Restart nginx service

    - name: Start service
      service:
        name: "{{ nginx__service_name }}"
        state: started
        enabled: "yes"
      register: nginx__service_started
  when: service_manager == 'service'
...
